{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\vinic\\\\Desktop\\\\react\\\\CurrentConverter\\\\converter\\\\src\\\\screens\\\\home\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport '../../assets/styles/global.css';\nimport Menu from '../../components/menu';\nimport './style-home.css';\nexport default function Home() {\n  _s();\n\n  const [valueOne, setValueOne] = useState('');\n  const [valueTwo, setValueTwo] = useState('');\n  const [selectOne, setSelectOne] = useState('');\n  const [selectTwo, setSelectTwo] = useState('');\n  const [currencyEur, setCurrencyEur] = useState([]);\n  const [currencyUsd, setCurrencyUsd] = useState([]);\n  const [currencyCad, setCurrencyCad] = useState([]);\n  const [currencyBrl, setCurrencyBrl] = useState([]);\n  const [lastDate, setLastDate] = useState('');\n  useEffect(() => {\n    eur();\n    usd();\n    cad();\n    brl();\n  }, []);\n\n  const eur = () => {\n    const urlEur = 'https://api.exchangeratesapi.io/latest';\n    fetch(urlEur, {\n      method: 'GET'\n    }).then(response => response.json()).then(moedas => {\n      const currency = Object.values(moedas)[0];\n      setCurrencyEur(currency); // console.log(Object.values(currency)[12] as any) \n      // console.log(currency) \n\n      const LastDate = Object.values(moedas)[2];\n      setLastDate(LastDate);\n    }).catch(Erro => console.log(Erro));\n  };\n\n  const usd = () => {\n    const urlUsd = 'https://api.exchangeratesapi.io/latest?base=USD ';\n    fetch(urlUsd, {\n      method: 'GET'\n    }).then(response => response.json()).then(moedas => {\n      const currency = Object.values(moedas)[0];\n      setCurrencyUsd(currency); // console.log(Object.values(currency)[18] as any) \n      // console.log(currency) \n    }).catch(Erro => console.log(Erro));\n  };\n\n  const cad = () => {\n    const urlUsd = 'https://api.exchangeratesapi.io/latest?base=CAD ';\n    fetch(urlUsd, {\n      method: 'GET'\n    }).then(response => response.json()).then(moedas => {\n      const currency = Object.values(moedas)[0];\n      setCurrencyCad(currency); // console.log(Object.values(currency)[18] as any) \n      // console.log(currency) \n    }).catch(Erro => console.log(Erro));\n  };\n\n  const brl = () => {\n    const urlUsd = 'https://api.exchangeratesapi.io/latest?base=BRL ';\n    fetch(urlUsd, {\n      method: 'GET'\n    }).then(response => response.json()).then(moedas => {\n      const currency = Object.values(moedas)[0];\n      setCurrencyBrl(currency); // console.log(Object.values(currency)[18] as any) \n      // console.log(currency) \n    }).catch(Erro => console.log(Erro));\n  };\n\n  const converting = () => {\n    // Caso o usuario coloque o valor no primeiro input\n    switch (selectOne) {\n      case \"USD\":\n        if (selectTwo == \"BRL\") {\n          const calculo = parseFloat(valueOne) * Object.values(currencyUsd)[12];\n          const formater = calculo.toFixed(2);\n          setValueTwo(formater + '');\n        } else if (selectTwo == \"EUR\") {\n          const calculo = parseFloat(valueOne) * Object.values(currencyUsd)[18];\n          const formater = calculo.toFixed(2);\n          setValueTwo(formater + '');\n        } else if (selectTwo == \"CAD\") {\n          const calculo = parseFloat(valueOne) * Object.values(currencyUsd)[0];\n          const formater = calculo.toFixed(8);\n          setValueTwo(formater + '');\n        } else if (selectTwo == \"USD\") {\n          var text = \"Mesmo valor\";\n          setValueTwo(text);\n        }\n\n        break;\n\n      case \"BRL\":\n        if (selectTwo == \"USD\") {\n          const calculo = parseFloat(valueOne) * Object.values(currencyBrl)[26];\n          const formater = calculo.toFixed(2);\n          setValueTwo(formater + '');\n        } else if (selectTwo == \"EUR\") {\n          const calculo = parseFloat(valueOne) * Object.values(currencyBrl)[18];\n          const formater = calculo.toFixed(2);\n          setValueTwo(formater + '');\n        } else if (selectTwo == \"CAD\") {\n          const calculo = parseFloat(valueOne) * Object.values(currencyBrl)[0];\n          const formater = calculo.toFixed(2);\n          setValueTwo(formater + '');\n        } else if (selectTwo == \"BRL\") {\n          var text = \"Mesmo valor\";\n          setValueTwo(text);\n        }\n\n        break;\n\n      case \"EUR\":\n        if (selectTwo == \"USD\") {\n          const calculo = parseFloat(valueOne) * Object.values(currencyEur)[26];\n          const formater = calculo.toFixed(2);\n          setValueTwo(formater + '');\n        } else if (selectTwo == \"BRL\") {\n          const calculo = parseFloat(valueOne) * Object.values(currencyEur)[12];\n          const formater = calculo.toFixed(2);\n          setValueTwo(formater + '');\n        } else if (selectTwo == \"CAD\") {\n          const calculo = parseFloat(valueOne) * Object.values(currencyEur)[0];\n          const formater = calculo.toFixed(2);\n          setValueTwo(formater + '');\n        } else if (selectTwo == \"EUR\") {\n          var text = \"Mesmo valor\";\n          setValueTwo(text);\n        }\n\n        break;\n\n      case \"CAD\":\n        if (selectTwo == \"USD\") {\n          const calculo = parseFloat(valueOne) * Object.values(currencyCad)[26];\n          ;\n          const formater = calculo.toFixed(2);\n          setValueTwo(formater + '');\n        } else if (selectTwo == \"BRL\") {\n          const calculo = parseFloat(valueOne) * Object.values(currencyCad)[12];\n          ;\n          const formater = calculo.toFixed(2);\n          setValueTwo(formater + '');\n        } else if (selectTwo == \"EUR\") {\n          const calculo = parseFloat(valueOne) * Object.values(currencyCad)[18];\n          ;\n          const formater = calculo.toFixed(2);\n          setValueTwo(formater + '');\n        } else if (selectTwo == \"CAD\") {\n          var text = \"Mesmo valor\";\n          setValueTwo(text);\n        }\n\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const convertingReverse = () => {\n    // Caso o usuario coloque o valor no primeiro input\n    switch (selectTwo) {\n      case \"USD\":\n        if (selectOne == \"BRL\") {\n          const calculo = parseFloat(valueTwo) * Object.values(currencyUsd)[12];\n          const formater = calculo.toFixed(2);\n          setValueOne(formater + '');\n        } else if (selectOne == \"EUR\") {\n          const calculo = parseFloat(valueTwo) * Object.values(currencyUsd)[18];\n          const formater = calculo.toFixed(2);\n          setValueOne(formater + '');\n        } else if (selectOne == \"CAD\") {\n          const calculo = parseFloat(valueTwo) * Object.values(currencyUsd)[0];\n          const formater = calculo.toFixed(8);\n          setValueOne(formater + '');\n        } else if (selectTwo == \"USD\") {\n          var text = \"Mesmo valor\";\n          setValueOne(text);\n        }\n\n        break;\n\n      case \"BRL\":\n        if (selectOne == \"USD\") {\n          const calculo = parseFloat(valueTwo) * Object.values(currencyBrl)[26];\n          const formater = calculo.toFixed(2);\n          setValueOne(formater + '');\n        } else if (selectOne == \"EUR\") {\n          const calculo = parseFloat(valueTwo) * Object.values(currencyBrl)[18];\n          const formater = calculo.toFixed(2);\n          setValueOne(formater + '');\n        } else if (selectOne == \"CAD\") {\n          const calculo = parseFloat(valueTwo) * Object.values(currencyBrl)[0];\n          const formater = calculo.toFixed(2);\n          setValueOne(formater + '');\n        } else if (selectTwo == \"BRL\") {\n          var text = \"Mesmo valor\";\n          setValueOne(text);\n        }\n\n        break;\n\n      case \"EUR\":\n        if (selectOne == \"USD\") {\n          const calculo = parseFloat(valueTwo) * Object.values(currencyEur)[26];\n          const formater = calculo.toFixed(2);\n          setValueOne(formater + '');\n        } else if (selectOne == \"BRL\") {\n          const calculo = parseFloat(valueTwo) * Object.values(currencyEur)[12];\n          const formater = calculo.toFixed(2);\n          setValueOne(formater + '');\n        } else if (selectOne == \"CAD\") {\n          const calculo = parseFloat(valueTwo) * Object.values(currencyEur)[0];\n          const formater = calculo.toFixed(2);\n          setValueOne(formater + '');\n        } else if (selectOne == \"EUR\") {\n          var text = \"Mesmo valor\";\n          setValueOne(text);\n        }\n\n        break;\n\n      case \"CAD\":\n        if (selectOne == \"USD\") {\n          const calculo = parseFloat(valueTwo) * Object.values(currencyCad)[26];\n          ;\n          const formater = calculo.toFixed(2);\n          setValueOne(formater + '');\n        } else if (selectOne == \"BRL\") {\n          const calculo = parseFloat(valueTwo) * Object.values(currencyCad)[12];\n          ;\n          const formater = calculo.toFixed(2);\n          setValueOne(formater + '');\n        } else if (selectOne == \"EUR\") {\n          const calculo = parseFloat(valueTwo) * Object.values(currencyCad)[18];\n          ;\n          const formater = calculo.toFixed(2);\n          setValueOne(formater + '');\n        } else if (selectOne == \"CAD\") {\n          var text = \"Mesmo valor\";\n          setValueOne(text);\n        }\n\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-home\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu\",\n      children: /*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"align-web\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title-date\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Ultima atualiza\\xE7\\xE3o do Banco Central Europeu: \", lastDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"align-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"first-input\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"select-moeda\",\n            name: \"moedas\",\n            onChange: e => setSelectOne(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"none\",\n              selected: true,\n              disabled: true,\n              children: \"Escolha uma moeda\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"BRL\",\n              children: \"BRL - Real\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"CAD\",\n              children: \"CAD - D\\xF3lar Canadense\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"EUR\",\n              children: \"EUR - Euro\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"USD\",\n              children: \"USD - D\\xF3lar Americano\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Para\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"second-input\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"select-moeda\",\n            name: \"moedas\",\n            onChange: e => setSelectTwo(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"none\",\n              selected: true,\n              disabled: true,\n              children: \"Escolha uma moeda\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"BRL\",\n              children: \"BRL - Real\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"CAD\",\n              children: \"CAD - D\\xF3lar Canadense\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"EUR\",\n              children: \"EUR - Euro\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"USD\",\n              children: \"USD - D\\xF3lar Americano\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"align-button\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"input-edit\",\n          type: \"text\",\n          placeholder: \"Valor a ser convertido\",\n          onChange: e => setValueOne(e.target.value),\n          value: valueOne\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          onClick: converting,\n          value: \"Converter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"input-edit\",\n          type: \"text\",\n          placeholder: \"Resultado\",\n          value: valueTwo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"align-mobile\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title-date\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Ultima atualiza\\xE7\\xE3o do banco de dados: \", lastDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"align-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"first-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"select-moeda\",\n            name: \"moedas\",\n            onChange: e => setSelectOne(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"none\",\n              selected: true,\n              disabled: true,\n              children: \"Escolha uma moeda\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"BRL\",\n              children: \"BRL - Real\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"CAD\",\n              children: \"CAD - D\\xF3lar Canadense\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"EUR\",\n              children: \"EUR - Euro\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"USD\",\n              children: \"USD - D\\xF3lar Americano\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 25\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 35\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"input-edit\",\n            type: \"text\",\n            placeholder: \"Valor a ser convertido\",\n            onChange: e => setValueOne(e.target.value),\n            value: valueOne\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"second-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"select-moeda\",\n            name: \"moedas\",\n            onChange: e => setSelectTwo(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"none\",\n              selected: true,\n              disabled: true,\n              children: \"Escolha uma moeda\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"BRL\",\n              children: \"BRL - Real\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"CAD\",\n              children: \"CAD - D\\xF3lar Canadense\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"EUR\",\n              children: \"EUR - Euro\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"USD\",\n              children: \"USD - D\\xF3lar Americano\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 25\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 35\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"input-edit\",\n            type: \"text\",\n            disabled: true,\n            placeholder: \"Resultado\",\n            value: valueTwo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"align-button\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"button\",\n            onClick: e => {\n              converting();\n              convertingReverse();\n            },\n            value: \"Converter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 289,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Home, \"hWCIMf3bahBsnruaxeVmbe6BGdg=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/vinic/Desktop/react/CurrentConverter/converter/src/screens/home/index.tsx"],"names":["React","useEffect","useState","Menu","Home","valueOne","setValueOne","valueTwo","setValueTwo","selectOne","setSelectOne","selectTwo","setSelectTwo","currencyEur","setCurrencyEur","currencyUsd","setCurrencyUsd","currencyCad","setCurrencyCad","currencyBrl","setCurrencyBrl","lastDate","setLastDate","eur","usd","cad","brl","urlEur","fetch","method","then","response","json","moedas","currency","Object","values","LastDate","catch","Erro","console","log","urlUsd","converting","calculo","parseFloat","formater","toFixed","text","convertingReverse","e","target","value"],"mappings":"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","sourcesContent":["import { Console } from 'console';\r\nimport React, { useEffect, useState } from 'react';\r\nimport '../../assets/styles/global.css';\r\nimport Menu from '../../components/menu';\r\nimport './style-home.css';\r\n\r\n\r\nexport default function Home() {\r\n\r\n    const [valueOne, setValueOne] = useState('');\r\n    const [valueTwo, setValueTwo] = useState('');\r\n\r\n    const [selectOne, setSelectOne] = useState('');\r\n    const [selectTwo, setSelectTwo] = useState('');\r\n\r\n    const [currencyEur, setCurrencyEur] = useState([]);\r\n    const [currencyUsd, setCurrencyUsd] = useState([]);\r\n    const [currencyCad, setCurrencyCad] = useState([]);\r\n    const [currencyBrl, setCurrencyBrl] = useState([]);\r\n\r\n    const [lastDate, setLastDate] = useState('');\r\n\r\n    useEffect(() => {\r\n        eur();\r\n        usd();\r\n        cad();\r\n        brl();\r\n    }, []);\r\n\r\n    \r\n    const eur = () => {\r\n        const urlEur = 'https://api.exchangeratesapi.io/latest';\r\n        fetch(urlEur, {\r\n            method: 'GET'\r\n        })\r\n            .then(response => response.json())\r\n            .then(moedas => {\r\n                const currency = Object.values(moedas)[0] as any\r\n                setCurrencyEur(currency);\r\n\r\n                // console.log(Object.values(currency)[12] as any) \r\n                // console.log(currency) \r\n\r\n                const LastDate = Object.values(moedas)[2] as any;\r\n                setLastDate(LastDate);\r\n            })\r\n            .catch(Erro => console.log(Erro));\r\n    }\r\n\r\n    const usd = () => {\r\n        const urlUsd = 'https://api.exchangeratesapi.io/latest?base=USD ';\r\n        fetch(urlUsd, {\r\n            method: 'GET'\r\n        })\r\n            .then(response => response.json())\r\n            .then(moedas => {\r\n                const currency = Object.values(moedas)[0] as any\r\n                setCurrencyUsd(currency);\r\n\r\n                // console.log(Object.values(currency)[18] as any) \r\n                // console.log(currency) \r\n            })\r\n            .catch(Erro => console.log(Erro));\r\n    }\r\n\r\n    const cad = () => {\r\n        const urlUsd = 'https://api.exchangeratesapi.io/latest?base=CAD ';\r\n        fetch(urlUsd, {\r\n            method: 'GET'\r\n        })\r\n            .then(response => response.json())\r\n            .then(moedas => {\r\n                const currency = Object.values(moedas)[0] as any\r\n                setCurrencyCad(currency);\r\n\r\n                // console.log(Object.values(currency)[18] as any) \r\n                // console.log(currency) \r\n            })\r\n            .catch(Erro => console.log(Erro));\r\n    }\r\n\r\n    const brl = () => {\r\n        const urlUsd = 'https://api.exchangeratesapi.io/latest?base=BRL ';\r\n        fetch(urlUsd, {\r\n            method: 'GET'\r\n        })\r\n            .then(response => response.json())\r\n            .then(moedas => {\r\n                const currency = Object.values(moedas)[0] as any\r\n                setCurrencyBrl(currency);\r\n\r\n                // console.log(Object.values(currency)[18] as any) \r\n                // console.log(currency) \r\n            })\r\n            .catch(Erro => console.log(Erro));\r\n    }\r\n\r\n    const converting = () => {\r\n        // Caso o usuario coloque o valor no primeiro input\r\n        switch (selectOne) {\r\n            case \"USD\":\r\n                if (selectTwo == \"BRL\") {\r\n                    const calculo = parseFloat(valueOne) * Object.values(currencyUsd)[12] as any;\r\n                    const formater = calculo.toFixed(2);\r\n                    setValueTwo(formater + '');\r\n                }\r\n                else if (selectTwo == \"EUR\") {\r\n                    const calculo = parseFloat(valueOne) * Object.values(currencyUsd)[18] as any;\r\n                    const formater = calculo.toFixed(2);\r\n                    setValueTwo(formater + '');\r\n                }\r\n                else if (selectTwo == \"CAD\") {\r\n                    const calculo = parseFloat(valueOne) * Object.values(currencyUsd)[0] as any;\r\n                    const formater = calculo.toFixed(8);\r\n                    setValueTwo(formater + '');\r\n                }\r\n                else if (selectTwo == \"USD\") {\r\n                    var text = \"Mesmo valor\"\r\n                    setValueTwo(text);\r\n                }\r\n                break;\r\n\r\n            case \"BRL\":\r\n                if (selectTwo == \"USD\") {\r\n                    const calculo = parseFloat(valueOne) * Object.values(currencyBrl)[26] as any;\r\n                    const formater = calculo.toFixed(2);\r\n                    setValueTwo(formater + '');\r\n                }\r\n                else if (selectTwo == \"EUR\") {\r\n                    const calculo = parseFloat(valueOne) * Object.values(currencyBrl)[18] as any;\r\n                    const formater = calculo.toFixed(2);\r\n                    setValueTwo(formater + '');\r\n                }\r\n                else if (selectTwo == \"CAD\") {\r\n                    const calculo = parseFloat(valueOne) * Object.values(currencyBrl)[0] as any;\r\n                    const formater = calculo.toFixed(2);\r\n                    setValueTwo(formater + '');\r\n                }\r\n                else if (selectTwo == \"BRL\") {\r\n                    var text = \"Mesmo valor\"\r\n                    setValueTwo(text);\r\n                }\r\n                break;\r\n\r\n            case \"EUR\":\r\n                if (selectTwo == \"USD\") {\r\n                    const calculo = parseFloat(valueOne) * Object.values(currencyEur)[26] as any;\r\n                    const formater = calculo.toFixed(2);\r\n                    setValueTwo(formater + '');\r\n                }\r\n                else if (selectTwo == \"BRL\") {\r\n                    const calculo = parseFloat(valueOne) * Object.values(currencyEur)[12] as any;\r\n                    const formater = calculo.toFixed(2);\r\n                    setValueTwo(formater + '');\r\n                }\r\n                else if (selectTwo == \"CAD\") {\r\n                    const calculo = parseFloat(valueOne) * Object.values(currencyEur)[0] as any;\r\n                    const formater = calculo.toFixed(2);\r\n                    setValueTwo(formater + '');\r\n                }\r\n                else if (selectTwo == \"EUR\") {\r\n                    var text = \"Mesmo valor\"\r\n                    setValueTwo(text);\r\n                }\r\n                break;\r\n\r\n            case \"CAD\":\r\n                if (selectTwo == \"USD\") {\r\n                    const calculo = parseFloat(valueOne) * Object.values(currencyCad)[26] as any;;\r\n                    const formater = calculo.toFixed(2);\r\n                    setValueTwo(formater + '');\r\n                }\r\n                else if (selectTwo == \"BRL\") {\r\n                    const calculo = parseFloat(valueOne) * Object.values(currencyCad)[12] as any;;\r\n                    const formater = calculo.toFixed(2);\r\n                    setValueTwo(formater + '');\r\n                }\r\n                else if (selectTwo == \"EUR\") {\r\n                    const calculo = parseFloat(valueOne) * Object.values(currencyCad)[18] as any;;\r\n                    const formater = calculo.toFixed(2);\r\n                    setValueTwo(formater + '');\r\n                }\r\n                else if (selectTwo == \"CAD\") {\r\n                    var text = \"Mesmo valor\"\r\n                    setValueTwo(text);\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const convertingReverse = () => {\r\n        // Caso o usuario coloque o valor no primeiro input\r\n        switch (selectTwo) {\r\n            case \"USD\":\r\n                if (selectOne == \"BRL\") {\r\n                    const calculo = parseFloat(valueTwo) * Object.values(currencyUsd)[12] as any;\r\n                    const formater = calculo.toFixed(2);\r\n                    setValueOne(formater + '');\r\n                }\r\n                else if (selectOne == \"EUR\") {\r\n                    const calculo = parseFloat(valueTwo) * Object.values(currencyUsd)[18] as any;\r\n                    const formater = calculo.toFixed(2);\r\n                    setValueOne(formater + '');\r\n                }\r\n                else if (selectOne == \"CAD\") {\r\n                    const calculo = parseFloat(valueTwo) * Object.values(currencyUsd)[0] as any;\r\n                    const formater = calculo.toFixed(8);\r\n                    setValueOne(formater + '');\r\n                }\r\n                else if (selectTwo == \"USD\") {\r\n                    var text = \"Mesmo valor\"\r\n                    setValueOne(text);\r\n                }\r\n                break;\r\n\r\n            case \"BRL\":\r\n                if (selectOne == \"USD\") {\r\n                    const calculo = parseFloat(valueTwo) * Object.values(currencyBrl)[26] as any;\r\n                    const formater = calculo.toFixed(2);\r\n                    setValueOne(formater + '');\r\n                }\r\n                else if (selectOne == \"EUR\") {\r\n                    const calculo = parseFloat(valueTwo) * Object.values(currencyBrl)[18] as any;\r\n                    const formater = calculo.toFixed(2);\r\n                    setValueOne(formater + '');\r\n                }\r\n                else if (selectOne == \"CAD\") {\r\n                    const calculo = parseFloat(valueTwo) * Object.values(currencyBrl)[0] as any;\r\n                    const formater = calculo.toFixed(2);\r\n                    setValueOne(formater + '');\r\n                }\r\n                else if (selectTwo == \"BRL\") {\r\n                    var text = \"Mesmo valor\"\r\n                    setValueOne(text);\r\n                }\r\n                break;\r\n\r\n            case \"EUR\":\r\n                if (selectOne == \"USD\") {\r\n                    const calculo = parseFloat(valueTwo) * Object.values(currencyEur)[26] as any;\r\n                    const formater = calculo.toFixed(2);\r\n                    setValueOne(formater + '');\r\n                }\r\n                else if (selectOne == \"BRL\") {\r\n                    const calculo = parseFloat(valueTwo) * Object.values(currencyEur)[12] as any;\r\n                    const formater = calculo.toFixed(2);\r\n                    setValueOne(formater + '');\r\n                }\r\n                else if (selectOne == \"CAD\") {\r\n                    const calculo = parseFloat(valueTwo) * Object.values(currencyEur)[0] as any;\r\n                    const formater = calculo.toFixed(2);\r\n                    setValueOne(formater + '');\r\n                }\r\n                else if (selectOne == \"EUR\") {\r\n                    var text = \"Mesmo valor\"\r\n                    setValueOne(text);\r\n                }\r\n                break;\r\n\r\n            case \"CAD\":\r\n                if (selectOne == \"USD\") {\r\n                    const calculo = parseFloat(valueTwo) * Object.values(currencyCad)[26] as any;;\r\n                    const formater = calculo.toFixed(2);\r\n                    setValueOne(formater + '');\r\n                }\r\n                else if (selectOne == \"BRL\") {\r\n                    const calculo = parseFloat(valueTwo) * Object.values(currencyCad)[12] as any;;\r\n                    const formater = calculo.toFixed(2);\r\n                    setValueOne(formater + '');\r\n                }\r\n                else if (selectOne == \"EUR\") {\r\n                    const calculo = parseFloat(valueTwo) * Object.values(currencyCad)[18] as any;;\r\n                    const formater = calculo.toFixed(2);\r\n                    setValueOne(formater + '');\r\n                }\r\n                else if (selectOne == \"CAD\") {\r\n                    var text = \"Mesmo valor\"\r\n                    setValueOne(text);\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-home\">\r\n            <div className=\"menu\">\r\n                <Menu />\r\n            </div>\r\n            <div className=\"align-web\">\r\n                <div className=\"title-date\">\r\n                    <h1>Ultima atualização do Banco Central Europeu: {lastDate}</h1>\r\n                </div>\r\n                <div className=\"align-input\">\r\n                    <div className=\"first-input\">\r\n                        <select className=\"select-moeda\" name=\"moedas\" onChange={e => setSelectOne(e.target.value)} >\r\n                            <option value=\"none\" selected disabled>Escolha uma moeda</option>\r\n                            <option value=\"BRL\">BRL - Real</option>\r\n                            <option value=\"CAD\">CAD - Dólar Canadense</option>\r\n                            <option value=\"EUR\">EUR - Euro</option>\r\n                            <option value=\"USD\">USD - Dólar Americano</option>\r\n                        </select>\r\n\r\n                    </div>\r\n                    <h1>Para</h1>\r\n                    <div className=\"second-input\">\r\n                        <select className=\"select-moeda\" name=\"moedas\" onChange={e => setSelectTwo(e.target.value)}>\r\n                            <option value=\"none\" selected disabled>Escolha uma moeda</option>\r\n                            <option value=\"BRL\">BRL - Real</option> \r\n                            <option value=\"CAD\">CAD - Dólar Canadense</option>\r\n                            <option value=\"EUR\">EUR - Euro</option>\r\n                            <option value=\"USD\">USD - Dólar Americano</option>\r\n                        </select>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"align-button\">\r\n                    <input id=\"input-edit\" type=\"text\" placeholder=\"Valor a ser convertido\" onChange={e => setValueOne(e.target.value)} value={valueOne} />\r\n                    <input type=\"button\" onClick={converting} value=\"Converter\" />\r\n                    <input id=\"input-edit\" type=\"text\" placeholder=\"Resultado\" value={valueTwo} />\r\n                </div>\r\n            </div>\r\n            {/* mobile */}\r\n            <div className=\"align-mobile\">\r\n                <div className=\"title-date\">\r\n                    <h1>Ultima atualização do banco de dados: {lastDate}</h1>\r\n                </div>\r\n                <div className=\"align-input\">\r\n                    <div className=\"first-input\">\r\n                        <select className=\"select-moeda\" name=\"moedas\" onChange={e => setSelectOne(e.target.value)} >\r\n                            <option value=\"none\" selected disabled>Escolha uma moeda</option>\r\n                            <option value=\"BRL\">BRL - Real</option>\r\n                            <option value=\"CAD\">CAD - Dólar Canadense</option>\r\n                            <option value=\"EUR\">EUR - Euro</option>\r\n                            <option value=\"USD\">USD - Dólar Americano</option>\r\n                        </select> <br />\r\n                        <input id=\"input-edit\" type=\"text\" placeholder=\"Valor a ser convertido\" onChange={e => setValueOne(e.target.value)} value={valueOne} />\r\n                    </div>\r\n                    <div className=\"second-input\">\r\n                        <select className=\"select-moeda\" name=\"moedas\" onChange={e => setSelectTwo(e.target.value)}>\r\n                            <option value=\"none\" selected disabled>Escolha uma moeda</option>\r\n                            <option value=\"BRL\">BRL - Real</option>\r\n                            <option value=\"CAD\">CAD - Dólar Canadense</option>\r\n                            <option value=\"EUR\">EUR - Euro</option>\r\n                            <option value=\"USD\">USD - Dólar Americano</option>\r\n                        </select> <br />\r\n                        <input id=\"input-edit\" type=\"text\" disabled placeholder=\"Resultado\" value={valueTwo} />\r\n\r\n                    </div>\r\n                    <div className=\"align-button\">\r\n                        <input type=\"button\" onClick={e => {converting();convertingReverse();}} value=\"Converter\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}